---
layout: page
title: "JavaScript bcmul function"
comments: true
sharing: true
footer: true
sidebar: false
alias:
- /functions/view/bcmul:872
- /functions/view/bcmul
- /functions/view/872
- /functions/bcmul:872
- /functions/872
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's bcmul

{% codeblock bc/bcmul.js lang:js https://raw.github.com/kvz/phpjs/master/functions/bc/bcmul.js raw on github %}
function bcmul (left_operand, right_operand, scale) {
  // http://kevin.vanzonneveld.net
  // +   original by: lmeyrick (https://sourceforge.net/projects/bcmath-js/)
  // -    depends on: _phpjs_shared_bc
  // *     example 1: bcmul(1, 2);
  // *     returns 1: 3
  //  @todo: implement these testcases
  //        bcscale(0);
  //
  //        bcmath.test.result('bcmul', 1, '2', bcmul("1", "2"));
  //        bcmath.test.result('bcmul', 2, '-15', bcmul("-3", "5"));
  //        bcmath.test.result('bcmul', 3, '12193263111263526900', bcmul("1234567890", "9876543210"));
  //        bcmath.test.result('bcmul', 4, '3.75', bcmul("2.5", "1.5", 2));
  //        bcmath.test.result('bcmul', 5, '13008.1522', bcmul("5573.33", "2.334", 4));
  var libbcmath = this._phpjs_shared_bc();

  var first, second, result;

  if (typeof(scale) == 'undefined') {
    scale = libbcmath.scale;
  }
  scale = ((scale < 0) ? 0 : scale);

  // create objects
  first = libbcmath.bc_init_num();
  second = libbcmath.bc_init_num();
  result = libbcmath.bc_init_num();

  first = libbcmath.php_str2num(left_operand.toString());
  second = libbcmath.php_str2num(right_operand.toString());

  result = libbcmath.bc_multiply(first, second, scale);

  if (result.n_scale > scale) {
    result.n_scale = scale;
  }
  return result.toString();
}
{% endcodeblock %}

 - [view on github](https://github.com/kvz/phpjs/blob/master/functions/bc/bcmul.js)
 - [edit on github](https://github.com/kvz/phpjs/edit/master/functions/bc/bcmul.js)

### Example 1
This code
{% codeblock lang:js example %}
bcmul(1, 2);
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
3
{% endcodeblock %}


### Other PHP functions in the bc extension
{% render_partial _includes/custom/bc.html %}

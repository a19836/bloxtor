---
layout: page
title: "JavaScript min function"
comments: true
sharing: true
footer: true
sidebar: false
alias:
- /functions/view/min:473
- /functions/view/min
- /functions/view/473
- /functions/min:473
- /functions/473
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's min

{% codeblock math/min.js lang:js https://raw.github.com/kvz/phpjs/master/functions/math/min.js raw on github %}
function min () {
  // http://kevin.vanzonneveld.net
  // +   original by: Onno Marsman
  // +    revised by: Onno Marsman
  // +    tweaked by: Jack
  // %          note: Long code cause we're aiming for maximum PHP compatibility
  // *     example 1: min(1, 3, 5, 6, 7);
  // *     returns 1: 1
  // *     example 2: min([2, 4, 5]);
  // *     returns 2: 2
  // *     example 3: min(0, 'hello');
  // *     returns 3: 0
  // *     example 4: min('hello', 0);
  // *     returns 4: 'hello'
  // *     example 5: min(-1, 'hello');
  // *     returns 5: -1
  // *     example 6: min([2, 4, 8], [2, 5, 7]);
  // *     returns 6: [2, 4, 8]
  var ar, retVal, i = 0,
    n = 0,
    argv = arguments,
    argc = argv.length,
    _obj2Array = function (obj) {
      if (Object.prototype.toString.call(obj) === '[object Array]') {
        return obj;
      }
      var ar = [];
      for (var i in obj) {
        if (obj.hasOwnProperty(i)) {
          ar.push(obj[i]);
        }
      }
      return ar;
    }, //function _obj2Array
    _compare = function (current, next) {
      var i = 0,
        n = 0,
        tmp = 0,
        nl = 0,
        cl = 0;

      if (current === next) {
        return 0;
      }
      else if (typeof current === 'object') {
        if (typeof next === 'object') {
          current = _obj2Array(current);
          next = _obj2Array(next);
          cl = current.length;
          nl = next.length;
          if (nl > cl) {
            return 1;
          }
          else if (nl < cl) {
            return -1;
          }
          for (i = 0, n = cl; i < n; ++i) {
            tmp = _compare(current[i], next[i]);
            if (tmp == 1) {
              return 1;
            }
            else if (tmp == -1) {
              return -1;
            }
          }
          return 0;
        }
        return -1;
      }
      else if (typeof next == 'object') {
        return 1;
      }
      else if (isNaN(next) && !isNaN(current)) {
        if (current == 0) {
          return 0;
        }
        return (current < 0 ? 1 : -1);
      }
      else if (isNaN(current) && !isNaN(next)) {
        if (next == 0) {
          return 0;
        }
        return (next > 0 ? 1 : -1);
      }

      if (next == current) {
        return 0;
      }
      return (next > current ? 1 : -1);
    }; //function _compare
  if (argc === 0) {
    throw new Error('At least one value should be passed to min()');
  }
  else if (argc === 1) {
    if (typeof argv[0] === 'object') {
      ar = _obj2Array(argv[0]);
    }
    else {
      throw new Error('Wrong parameter count for min()');
    }
    if (ar.length === 0) {
      throw new Error('Array must contain at least one element for min()');
    }
  }
  else {
    ar = argv;
  }

  retVal = ar[0];
  for (i = 1, n = ar.length; i < n; ++i) {
    if (_compare(retVal, ar[i]) == -1) {
      retVal = ar[i];
    }
  }

  return retVal;
}
{% endcodeblock %}

 - [view on github](https://github.com/kvz/phpjs/blob/master/functions/math/min.js)
 - [edit on github](https://github.com/kvz/phpjs/edit/master/functions/math/min.js)

### Example 1
This code
{% codeblock lang:js example %}
min(1, 3, 5, 6, 7);
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
1
{% endcodeblock %}

### Example 2
This code
{% codeblock lang:js example %}
min([2, 4, 5]);
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
2
{% endcodeblock %}

### Example 3
This code
{% codeblock lang:js example %}
min(0, 'hello');
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
0
{% endcodeblock %}


### Other PHP functions in the math extension
{% render_partial _includes/custom/math.html %}
## Legacy comments
These were imported from our old site. Please use disqus below for new comments
<div style="overflow-y: scroll; max-height: 500px;">
{% render_partial functions/min/_comments.html %}
</div>

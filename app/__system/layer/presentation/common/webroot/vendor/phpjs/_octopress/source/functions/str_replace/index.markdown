---
layout: page
title: "JavaScript str_replace function"
comments: true
sharing: true
footer: true
sidebar: false
alias:
- /functions/view/str_replace:527
- /functions/view/str_replace
- /functions/view/527
- /functions/str_replace:527
- /functions/527
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's str_replace

{% codeblock strings/str_replace.js lang:js https://raw.github.com/kvz/phpjs/master/functions/strings/str_replace.js raw on github %}
function str_replace (search, replace, subject, count) {
  // http://kevin.vanzonneveld.net
  // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // +   improved by: Gabriel Paderni
  // +   improved by: Philip Peterson
  // +   improved by: Simon Willison (http://simonwillison.net)
  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)
  // +   bugfixed by: Anton Ongson
  // +      input by: Onno Marsman
  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // +    tweaked by: Onno Marsman
  // +      input by: Brett Zamir (http://brett-zamir.me)
  // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // +   input by: Oleg Eremeev
  // +   improved by: Brett Zamir (http://brett-zamir.me)
  // +   bugfixed by: Oleg Eremeev
  // %          note 1: The count parameter must be passed as a string in order
  // %          note 1:  to find a global variable in which the result will be given
  // *     example 1: str_replace(' ', '.', 'Kevin van Zonneveld');
  // *     returns 1: 'Kevin.van.Zonneveld'
  // *     example 2: str_replace(['{name}', 'l'], ['hello', 'm'], '{name}, lars');
  // *     returns 2: 'hemmo, mars'
  var i = 0,
    j = 0,
    temp = '',
    repl = '',
    sl = 0,
    fl = 0,
    f = [].concat(search),
    r = [].concat(replace),
    s = subject,
    ra = Object.prototype.toString.call(r) === '[object Array]',
    sa = Object.prototype.toString.call(s) === '[object Array]';
  s = [].concat(s);
  if (count) {
    this.window[count] = 0;
  }

  for (i = 0, sl = s.length; i < sl; i++) {
    if (s[i] === '') {
      continue;
    }
    for (j = 0, fl = f.length; j < fl; j++) {
      temp = s[i] + '';
      repl = ra ? (r[j] !== undefined ? r[j] : '') : r[0];
      s[i] = (temp).split(f[j]).join(repl);
      if (count && s[i] !== temp) {
        this.window[count] += (temp.length - s[i].length) / f[j].length;
      }
    }
  }
  return sa ? s : s[0];
}
{% endcodeblock %}

 - [view on github](https://github.com/kvz/phpjs/blob/master/functions/strings/str_replace.js)
 - [edit on github](https://github.com/kvz/phpjs/edit/master/functions/strings/str_replace.js)

### Example 1
This code
{% codeblock lang:js example %}
str_replace(' ', '.', 'Kevin van Zonneveld');
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
'Kevin.van.Zonneveld'
{% endcodeblock %}

### Example 2
This code
{% codeblock lang:js example %}
str_replace(['{name}', 'l'], ['hello', 'm'], '{name}, lars');
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
'hemmo, mars'
{% endcodeblock %}


### Other PHP functions in the strings extension
{% render_partial _includes/custom/strings.html %}
## Legacy comments
These were imported from our old site. Please use disqus below for new comments
<div style="overflow-y: scroll; max-height: 500px;">
{% render_partial functions/str_replace/_comments.html %}
</div>

---
layout: page
title: "JavaScript array_merge_recursive function"
comments: true
sharing: true
footer: true
sidebar: false
alias:
- /functions/view/array_merge_recursive:327
- /functions/view/array_merge_recursive
- /functions/view/327
- /functions/array_merge_recursive:327
- /functions/327
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's array_merge_recursive

{% codeblock array/array_merge_recursive.js lang:js https://raw.github.com/kvz/phpjs/master/functions/array/array_merge_recursive.js raw on github %}
function array_merge_recursive (arr1, arr2) {
  // http://kevin.vanzonneveld.net
  // +   original by: Subhasis Deb
  // +      input by: Brett Zamir (http://brett-zamir.me)
  // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // -    depends on: array_merge
  // *     example 1: arr1 = {'color': {'favourite': 'read'}, 0: 5}
  // *     example 1: arr2 = {0: 10, 'color': {'favorite': 'green', 0: 'blue'}}
  // *     example 1: array_merge_recursive(arr1, arr2)
  // *     returns 1: {'color': {'favorite': {0: 'red', 1: 'green'}, 0: 'blue'}, 1: 5, 1: 10}
  var idx = '';

  if (arr1 && Object.prototype.toString.call(arr1) === '[object Array]' &&
    arr2 && Object.prototype.toString.call(arr2) === '[object Array]') {
    for (idx in arr2) {
      arr1.push(arr2[idx]);
    }
  } else if ((arr1 && (arr1 instanceof Object)) && (arr2 && (arr2 instanceof Object))) {
    for (idx in arr2) {
      if (idx in arr1) {
        if (typeof arr1[idx] == 'object' && typeof arr2 == 'object') {
          arr1[idx] = this.array_merge(arr1[idx], arr2[idx]);
        } else {
          arr1[idx] = arr2[idx];
        }
      } else {
        arr1[idx] = arr2[idx];
      }
    }
  }

  return arr1;
}
{% endcodeblock %}

 - [view on github](https://github.com/kvz/phpjs/blob/master/functions/array/array_merge_recursive.js)
 - [edit on github](https://github.com/kvz/phpjs/edit/master/functions/array/array_merge_recursive.js)

### Example 1
This code
{% codeblock lang:js example %}
arr1 = {'color': {'favourite': 'read'}, 0: 5}
arr2 = {0: 10, 'color': {'favorite': 'green', 0: 'blue'}}
array_merge_recursive(arr1, arr2)
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
{'color': {'favorite': {0: 'red', 1: 'green'}, 0: 'blue'}, 1: 5, 1: 10}
{% endcodeblock %}


### Other PHP functions in the array extension
{% render_partial _includes/custom/array.html %}
## Legacy comments
These were imported from our old site. Please use disqus below for new comments
<div style="overflow-y: scroll; max-height: 500px;">
{% render_partial functions/array_merge_recursive/_comments.html %}
</div>

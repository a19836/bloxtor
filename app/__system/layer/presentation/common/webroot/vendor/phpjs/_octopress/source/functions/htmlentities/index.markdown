---
layout: page
title: "JavaScript htmlentities function"
comments: true
sharing: true
footer: true
sidebar: false
alias:
- /functions/view/htmlentities:425
- /functions/view/htmlentities
- /functions/view/425
- /functions/htmlentities:425
- /functions/425
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's htmlentities

{% codeblock strings/htmlentities.js lang:js https://raw.github.com/kvz/phpjs/master/functions/strings/htmlentities.js raw on github %}
function htmlentities (string, quote_style, charset, double_encode) {
  // http://kevin.vanzonneveld.net
  // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // +   improved by: nobbler
  // +    tweaked by: Jack
  // +   bugfixed by: Onno Marsman
  // +    revised by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
  // +    bugfixed by: Brett Zamir (http://brett-zamir.me)
  // +      input by: Ratheous
  // +   improved by: Rafa≈Ç Kukawski (http://blog.kukawski.pl)
  // +   improved by: Dj (http://phpjs.org/functions/htmlentities:425#comment_134018)
  // -    depends on: get_html_translation_table
  // *     example 1: htmlentities('Kevin & van Zonneveld');
  // *     returns 1: 'Kevin &amp; van Zonneveld'
  // *     example 2: htmlentities("foo'bar","ENT_QUOTES");
  // *     returns 2: 'foo&#039;bar'
  var hash_map = this.get_html_translation_table('HTML_ENTITIES', quote_style),
    symbol = '';
  string = string == null ? '' : string + '';

  if (!hash_map) {
    return false;
  }

  if (quote_style && quote_style === 'ENT_QUOTES') {
    hash_map["'"] = '&#039;';
  }

  if (!!double_encode || double_encode == null) {
    for (symbol in hash_map) {
      if (hash_map.hasOwnProperty(symbol)) {
        string = string.split(symbol).join(hash_map[symbol]);
      }
    }
  } else {
    string = string.replace(/([\s\S]*?)(&(?:#\d+|#x[\da-f]+|[a-zA-Z][\da-z]*);|$)/g, function (ignore, text, entity) {
      for (symbol in hash_map) {
        if (hash_map.hasOwnProperty(symbol)) {
          text = text.split(symbol).join(hash_map[symbol]);
        }
      }

      return text + entity;
    });
  }

  return string;
}
{% endcodeblock %}

 - [view on github](https://github.com/kvz/phpjs/blob/master/functions/strings/htmlentities.js)
 - [edit on github](https://github.com/kvz/phpjs/edit/master/functions/strings/htmlentities.js)

### Example 1
This code
{% codeblock lang:js example %}
htmlentities('Kevin & van Zonneveld');
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
'Kevin &amp; van Zonneveld'
{% endcodeblock %}

### Example 2
This code
{% codeblock lang:js example %}
htmlentities("foo'bar","ENT_QUOTES");
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
'foo&#039;bar'
{% endcodeblock %}


### Other PHP functions in the strings extension
{% render_partial _includes/custom/strings.html %}
## Legacy comments
These were imported from our old site. Please use disqus below for new comments
<div style="overflow-y: scroll; max-height: 500px;">
{% render_partial functions/htmlentities/_comments.html %}
</div>

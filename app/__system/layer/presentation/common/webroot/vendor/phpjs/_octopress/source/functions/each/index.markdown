---
layout: page
title: "JavaScript each function"
comments: true
sharing: true
footer: true
sidebar: false
alias:
- /functions/view/each:390
- /functions/view/each
- /functions/view/390
- /functions/each:390
- /functions/390
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's each

{% codeblock array/each.js lang:js https://raw.github.com/kvz/phpjs/master/functions/array/each.js raw on github %}
function each (arr) {
  // http://kevin.vanzonneveld.net
  // +   original by: Ates Goral (http://magnetiq.com)
  // +    revised by: Brett Zamir (http://brett-zamir.me)
  // %        note 1: Uses global: php_js to store the array pointer
  // *     example 1: each({a: "apple", b: "balloon"});
  // *     returns 1: {0: "a", 1: "apple", key: "a", value: "apple"}
  //  Will return a 4-item object unless a class property 'returnArrayOnly'
  //  is set to true on this function if want to only receive a two-item
  //  numerically-indexed array (for the sake of array destructuring in
  //  JavaScript 1.7+ (similar to list() in PHP, but as PHP does it automatically
  //  in that context and JavaScript cannot, we needed something to allow that option)
  //  See https://developer.mozilla.org/en/New_in_JavaScript_1.7#Destructuring_assignment
  // BEGIN REDUNDANT
  this.php_js = this.php_js || {};
  this.php_js.pointers = this.php_js.pointers || [];
  var indexOf = function (value) {
    for (var i = 0, length = this.length; i < length; i++) {
      if (this[i] === value) {
        return i;
      }
    }
    return -1;
  };
  // END REDUNDANT
  var pointers = this.php_js.pointers;
  if (!pointers.indexOf) {
    pointers.indexOf = indexOf;
  }
  if (pointers.indexOf(arr) === -1) {
    pointers.push(arr, 0);
  }
  var arrpos = pointers.indexOf(arr);
  var cursor = pointers[arrpos + 1];
  var pos = 0;

  if (Object.prototype.toString.call(arr) !== '[object Array]') {
    var ct = 0;
    for (var k in arr) {
      if (ct === cursor) {
        pointers[arrpos + 1] += 1;
        if (each.returnArrayOnly) {
          return [k, arr[k]];
        } else {
          return {
            1: arr[k],
            value: arr[k],
            0: k,
            key: k
          };
        }
      }
      ct++;
    }
    return false; // Empty
  }
  if (arr.length === 0 || cursor === arr.length) {
    return false;
  }
  pos = cursor;
  pointers[arrpos + 1] += 1;
  if (each.returnArrayOnly) {
    return [pos, arr[pos]];
  } else {
    return {
      1: arr[pos],
      value: arr[pos],
      0: pos,
      key: pos
    };
  }
}
{% endcodeblock %}

 - [view on github](https://github.com/kvz/phpjs/blob/master/functions/array/each.js)
 - [edit on github](https://github.com/kvz/phpjs/edit/master/functions/array/each.js)

### Example 1
This code
{% codeblock lang:js example %}
each({a: "apple", b: "balloon"});
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
{0: "a", 1: "apple", key: "a", value: "apple"}
{% endcodeblock %}


### Other PHP functions in the array extension
{% render_partial _includes/custom/array.html %}
## Legacy comments
These were imported from our old site. Please use disqus below for new comments
<div style="overflow-y: scroll; max-height: 500px;">
{% render_partial functions/each/_comments.html %}
</div>

---
layout: page
title: "JavaScript array_intersect_assoc function"
comments: true
sharing: true
footer: true
sidebar: false
alias:
- /functions/view/array_intersect_assoc:319
- /functions/view/array_intersect_assoc
- /functions/view/319
- /functions/array_intersect_assoc:319
- /functions/319
---
<!-- Generated by Rakefile:build -->
A JavaScript equivalent of PHP's array_intersect_assoc

{% codeblock array/array_intersect_assoc.js lang:js https://raw.github.com/kvz/phpjs/master/functions/array/array_intersect_assoc.js raw on github %}
function array_intersect_assoc (arr1) {
  // http://kevin.vanzonneveld.net
  // +   original by: Brett Zamir (http://brett-zamir.me)
  // %        note 1: These only output associative arrays (would need to be
  // %        note 1: all numeric and counting from zero to be numeric)
  // *     example 1: $array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}
  // *     example 1: $array2 = {a: 'green', 0: 'yellow', 1: 'red'}
  // *     example 1: array_intersect_assoc($array1, $array2)
  // *     returns 1: {a: 'green'}
  var retArr = {},
    argl = arguments.length,
    arglm1 = argl - 1,
    k1 = '',
    arr = {},
    i = 0,
    k = '';

  arr1keys: for (k1 in arr1) {
    arrs: for (i = 1; i < argl; i++) {
      arr = arguments[i];
      for (k in arr) {
        if (arr[k] === arr1[k1] && k === k1) {
          if (i === arglm1) {
            retArr[k1] = arr1[k1];
          }
          // If the innermost loop always leads at least once to an equal value, continue the loop until done
          continue arrs;
        }
      }
      // If it reaches here, it wasn't found in at least one array, so try next value
      continue arr1keys;
    }
  }

  return retArr;
}
{% endcodeblock %}

 - [view on github](https://github.com/kvz/phpjs/blob/master/functions/array/array_intersect_assoc.js)
 - [edit on github](https://github.com/kvz/phpjs/edit/master/functions/array/array_intersect_assoc.js)

### Example 1
This code
{% codeblock lang:js example %}
$array1 = {a: 'green', b: 'brown', c: 'blue', 0: 'red'}
$array2 = {a: 'green', 0: 'yellow', 1: 'red'}
array_intersect_assoc($array1, $array2)
{% endcodeblock %}

Should return
{% codeblock lang:js returns %}
{a: 'green'}
{% endcodeblock %}


### Other PHP functions in the array extension
{% render_partial _includes/custom/array.html %}

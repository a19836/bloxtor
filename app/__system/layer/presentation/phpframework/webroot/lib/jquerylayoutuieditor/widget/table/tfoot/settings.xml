<?xml version="1.0" encoding="UTF-8"?>
<widget>
	<label>Table Foot</label>
	<tag>table-foot</tag>
	<files>
		<js>../createWidgetTableHandler.js</js>
		<css>../createWidgetTableHandler.css</css>
	</files>
	<settings>
		<menu_settings_class>table-sections-menu-settings</menu_settings_class>
		<template_class>droppable</template_class>
		<create_widget_class>TableFootWidget</create_widget_class>
	</settings>
	<menu_widget></menu_widget>
	<template_widget></template_widget>
	<properties><![CDATA[
		<div class="tfoot">
			<label>Rows: <i class="zmdi zmdi-hc-lg zmdi-plus add"></i></label>
			<div class="no-rows">There are no rows</div>
			<table>
				<tbody></tbody>
			</table>
		</div>
	]]></properties>
	<menu_css><![CDATA[
		.layout-ui-editor > .menu-widgets .menu-widget.menu-widget-table-foot:before,
		  body > .menu-widget.menu-widget-table-foot.ui-draggable-dragging:before {
			background-image:url('#widget_webroot_url#logo.svg');
		}
	]]></menu_css>
	<menu_js><![CDATA[
		function TableFootWidget(ui_creator, menu_widget) {
			var me = this;
			var TableHandler = new createWidgetTableHandler(ui_creator, menu_widget); //init the other part of the container
			
			me.init = function() {
				menu_widget.attr({
					"data-on-parse-template-widget-html-func": ui_creator.obj_var_name + ".menu_widgets_objs['table-foot'].parseHtml",
					"data-on-clone-menu-widget-func": ui_creator.obj_var_name + ".menu_widgets_objs['table-foot'].onCloneMenuWidget",
					"data-on-create-template-widget-func": ui_creator.obj_var_name + ".menu_widgets_objs['table-foot'].onCreateTemplateWidget",
					"data-on-open-widget-header-func": ui_creator.obj_var_name + ".menu_widgets_objs['table-foot'].onOpenWidgetHeader",
					"data-on-close-widget-header-func": ui_creator.obj_var_name + ".menu_widgets_objs['table-foot'].onCloseWidgetHeader",
				});
				
				menu_widget.children(".properties").attr({
					"data-on-open-settings-func": ui_creator.obj_var_name + ".menu_widgets_objs['table-foot'].onOpenWidgetSettings",
					"data-on-close-settings-func": ui_creator.obj_var_name + ".menu_widgets_objs['table-foot'].onCloseWidgetSettings",
					"data-on-after-save-settings-field-func": ui_creator.obj_var_name + ".menu_widgets_objs['table-foot'].saveSettingsField",
				});
			};
			
			me.parseHtml = function(html_element) {
				if (html_element && html_element.nodeName.toLowerCase() == "tfoot") {
					html_element = $(html_element);
					
					return {
						droppable: html_element,
					};
				}
			};
			
			me.onCloneMenuWidget = function(widget, html_element) {
				if (!html_element) {
					var elm = document.createElement('tfoot');
					return ui_creator.getNewTemplateWidgetBasedInHtmlElement(widget, elm, null);
				}
				
				return ui_creator.onCloneMenuWidget(widget, html_element);
			};
			
			me.onCreateTemplateWidget = function(widget, html_element) {
				if (!html_element) {
					var parent = widget.parent();
					var pnn = parent[0].nodeName.toLowerCase();
					
					if (pnn != "table") {
						parent = widget.parent().closest('table');
						
						if (parent[0])
							parent.append(widget);
						else {
							widget.remove();
							ui_creator.showError("This item can only be dropped to Tables!");
						}
					}
				}
			};
			
			me.onOpenWidgetHeader = function(widget, widget_header) {
				widget_header.find(" > .options > .add-tfoot-child").remove();
				var add = $('<i class="zmdi zmdi-plus-circle option add-tfoot-child" title="Add Row"></i>');
				
				add.click(function(event) {
					addChild(widget);
				});
				
				add.insertBefore( widget_header.find(" > .options > .close") );
			};
			
			me.onCloseWidgetHeader = function(widget, widget_header) {
				widget_header.find(" > .options > .add-tfoot-child").remove();
			};
			
			me.onOpenWidgetSettings = function(widget, menu_settings) {
				menu_settings.find(".settings-actions  > ul > li > button.add-tfoot-child").remove();
				
				var add = $('<button class="btn add-tfoot-child">Add Row <i class="zmdi zmdi-plus-circle"></i></button>');
				
				add.click(function(event) {
					addChild(widget);
				});
				
				menu_settings.find(".settings-actions > ul > li").append(add);
				
				//load rows settings
				var ul = menu_settings.find(".settings-properties > ul");
				TableHandler.prepareTableSectionSettings(ul);
				TableHandler.loadTableSectionSettings(ul, widget);
			};
			
			me.onCloseWidgetSettings = function(widget, menu_settings) {
				menu_settings.find(".settings-actions  > ul > li > button.add-tfoot-child").remove();
			};
			
			me.saveSettingsField = function(field, widget, status) {
				return TableHandler.saveSettingsSectionField(field, widget, status);
			};
			
			function addChild(widget) {
				ui_creator.createTemplateWidgetFromMenuWidgetTag("table-row", widget, null);
			}
		}
	]]></menu_js>
</widget>
